# Using local storage for kubeadm cluster for Neo4j data
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage-neo4j-data
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Retain

---
# PV for Neo4j data
apiVersion: v1
kind: PersistentVolume
metadata:
  name: neo4j-data-local-pv
spec:
  capacity:
    storage: 4Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage-neo4j-data
  local:
    path: /mnt/data/neo4j/data
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - YOUR_NODE_NAME  # Replace with actual node name

---
# PVC for Neo4j data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: neo4j-data-local-pvc
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: local-storage-neo4j-data
  resources:
    requests:
      storage: 4Gi

---
# Using local storage for kubeadm cluster for Neo4j logs
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage-neo4j-logs
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Retain

---
# PV for Neo4j logs
apiVersion: v1
kind: PersistentVolume
metadata:
  name: neo4j-logs-local-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage-neo4j-logs
  local:
    path: /mnt/data/neo4j/logs
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - YOUR_NODE_NAME  # Replace with actual node name

---
# PVC for Neo4j logs
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: neo4j-logs-local-pvc
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: local-storage-neo4j-logs
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: neo4j
spec:
  serviceName: neo4j
  replicas: 1
  selector:
    matchLabels:
      app: neo4j
  template:
    metadata:
      labels:
        app: neo4j
    spec:
      imagePullSecrets:
      - name: thryvo-secret
      containers:
      - name: neo4j
        image: caxdevacrpa0.azurecr.io/cax_neo4j_dev:latest
        env:
        - name: NEO4J_AUTH
          value: "neo4j/password123"
        - name: NEO4J_ACCEPT_LICENSE_AGREEMENT
          value: "yes"
        - name: NEO4J_server_config_strict__validation_enabled
          value: "false"
        ports:
        - containerPort: 7474
          name: browser
        - containerPort: 7687
          name: bolt
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - mountPath: "/data"
          name: neo4j-data
        - mountPath: "/logs"
          name: neo4j-logs
      volumes:
      - name: neo4j-data
        persistentVolumeClaim:
          claimName: neo4j-data-local-pvc
      - name: neo4j-logs
        persistentVolumeClaim:
          claimName: neo4j-logs-local-pvc
      imagePullSecrets:
      - name: thryvo-secret

---
apiVersion: v1
kind: Service
metadata:
  name: neo4j
spec:
  selector:
    app: neo4j
  ports:
    - name: browser
      protocol: TCP
      port: 7474
      targetPort: 7474
    - name: bolt
      protocol: TCP
      port: 7687
      targetPort: 7687
  type: NodePort
